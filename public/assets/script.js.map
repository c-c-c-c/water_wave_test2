{"version":3,"sources":["../../src/script/script.js"],"names":["scene","THREE","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","document","body","appendChild","domElement","light","AmbientLight","add","geometry","PlaneGeometry","material","MeshPhongMaterial","map","TextureLoader","load","color","plane","Mesh","position","z","mu0","mu","calcDisp","r","time","Math","sin","PI","render","requestAnimationFrame","Date","now","data","vertices","i","length","pos","Vector2","x","y","verticesNeedUpdate"],"mappings":";;AAAA;AACA,IAAIA,QAAQ,IAAIC,MAAMC,KAAV,EAAZ;AACA;AACA,IAAIC,SAAS,IAAIF,MAAMG,iBAAV,CAA6B,EAA7B,EAAiCC,OAAOC,UAAP,GAAoBD,OAAOE,WAA5D,EAAyE,GAAzE,EAA8E,IAA9E,CAAb;AACA;AACA,IAAIC,WAAW,IAAIP,MAAMQ,aAAV,CAAyB,EAACC,WAAW,IAAZ,EAAzB,CAAf;AACA;AACAF,SAASG,OAAT,CAAkBN,OAAOC,UAAzB,EAAqCD,OAAOE,WAA5C;AACA;AACAK,SAASC,IAAT,CAAcC,WAAd,CAA2BN,SAASO,UAApC;;AAEA;AACA,IAAIC,QAAQ,IAAIf,MAAMgB,YAAV,CAAwB,QAAxB,CAAZ,C,CAAgD;AAChD;AACAjB,MAAMkB,GAAN,CAAWF,KAAX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,WAAW,IAAIlB,MAAMmB,aAAV,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,EAAnC,CAAf;;AAEA;AACA,IAAIC,WAAW,IAAIpB,MAAMqB,iBAAV,CAA6B,EAAEC,KAAK,IAAItB,MAAMuB,aAAV,GAA0BC,IAA1B,CAAgC,wBAAhC,CAAP,EAAmEC,OAAO,QAA1E,EAA7B,CAAf;AACA;AACA,IAAIC,QAAQ,IAAI1B,MAAM2B,IAAV,CAAgBT,QAAhB,EAA0BE,QAA1B,CAAZ;AACA;AACArB,MAAMkB,GAAN,CAAWS,KAAX;;AAEA;AACAxB,OAAO0B,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;AAEA;AACA,IAAIC,MAAM,CAAV;AACA;AACA,IAAIC,KAAK,GAAT;;AAEA,SAASC,QAAT,CAAmBC,CAAnB,EAAsBC,IAAtB,EAA6B;AAC7B,QAAO,MAAIC,KAAKC,GAAL,CAAS,IAAED,KAAKE,EAAP,IAAWJ,IAAE,CAAF,GAAMC,IAAjB,CAAT,CAAX;AACC;AACD,SAASI,MAAT,GAAiB;AACjB;AACAC,uBAAuBD,MAAvB;;AAEA,KAAIJ,OAAOM,KAAKC,GAAL,KAAa,MAAxB;AACA,KAAIC,OAAO,EAAX;AACA,KAAIC,WAAWjB,MAAMR,QAAN,CAAeyB,QAA9B;;AAEA;AACA,MAAM,IAAIC,IAAI,CAAd,EAAiBA,IAAID,SAASE,MAA9B,EAAsCD,GAAtC,EAA4C;AAC3C,MAAIE,MAAM,IAAI9C,MAAM+C,OAAV,CAAmBJ,SAASC,CAAT,EAAYI,CAA/B,EAAkCL,SAASC,CAAT,EAAYK,CAA9C,CAAV;AACAP,OAAKE,CAAL,IAAUb,KAAGC,SAAUc,IAAID,MAAJ,EAAV,EAAwBX,IAAxB,CAAb;AACA;;AAED;AACAH,OAAMD,GAAN;;AAEA;AACA,MAAI,IAAIc,IAAI,CAAZ,EAAeA,IAAIF,KAAKG,MAAxB,EAAgCD,GAAhC,EAAqC;AACpCD,WAASC,CAAT,EAAYf,CAAZ,GAAgBa,KAAKE,CAAL,CAAhB;AACA;AACDlB,OAAMR,QAAN,CAAegC,kBAAf,GAAoC,IAApC;;AAEA;AACA3C,UAAS+B,MAAT,CAAgBvC,KAAhB,EAAsBG,MAAtB;AAEC;AACDoC","file":"script.js","sourcesContent":["// シーンの作成\nvar scene = new THREE.Scene();\n// カメラの作成\nvar camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n// レンダラーの作成（アンチエイリアス有効）\nvar renderer = new THREE.WebGLRenderer( {antialias: true} );\n// レンダラーが描画するキャンバスサイズの設定\nrenderer.setSize( window.innerWidth, window.innerHeight );\n// キャンバスをDOMツリーに追加\ndocument.body.appendChild( renderer.domElement );\n\n// 環境光の作成\nvar light = new THREE.AmbientLight( 0xffffff ); // soft white light\n// 環境光をシーンに追加\nscene.add( light );\n\n// TrackballControlsインスタンス作成\n//var controls = new THREE.TrackballControls( camera );\n\n// ジオメトリの作成\n// PlaneGeometry(width, height, widthSegments, heightSegments)\n// width: 横の長さ（x軸）\n// height 縦の長さ（y軸）\n// widthSegments: 横の分割数（デフォルト1）\n// heightSegments: 縦の分割数（デフォルト1）\nvar geometry = new THREE.PlaneGeometry( 4, 3, 32, 32);\n\n// マテリアルの作成\nvar material = new THREE.MeshPhongMaterial( { map: new THREE.TextureLoader().load( './public/img/water.jpg' ), color: 0xffffff } );\n// オブジェクトの作成\nvar plane = new THREE.Mesh( geometry, material );\n// オブジェクトをシーンに追加\nscene.add( plane );\n\n// カメラ位置調整\ncamera.position.z = 2;\n\n// 減衰率\nvar mu0 = 1;\n// 減衰係数\nvar mu = 1.0;\n\nfunction calcDisp( r, time ) {\nreturn 0.2*Math.sin(2*Math.PI*(r*2 - time));\n}\nfunction render(){\n// requestAnimationFrameで自分自身を呼び出し続けることでレンダリングを繰り返す\nrequestAnimationFrame( render );\n\nvar time = Date.now() * 0.0001;\nvar data = [];\nvar vertices = plane.geometry.vertices;\n\n// \t頂点情報のx、y座標から計算した中心からの距離と時間情報をもとにz軸上のずれを計算\nfor ( var i = 0; i < vertices.length; i++ ) {\n\tvar pos = new THREE.Vector2( vertices[i].x, vertices[i].y );\n\tdata[i] = mu*calcDisp( pos.length(), time );\n}\n\n// 減衰係数を減らしていくことで波紋の振幅を徐々に減衰させる\nmu *= mu0;\n\n// 計算結果を頂点情報に反映させる\nfor(var i = 0; i < data.length; i++) {\n\tvertices[i].z = data[i];\n}\nplane.geometry.verticesNeedUpdate = true;\n\n// レンダリング（表示）\nrenderer.render(scene,camera);\n\n}\nrender();\n"]}